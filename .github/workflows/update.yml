name: Update Blocklists

on:
  schedule:
    - cron: "0 3,9,15,21 * * *"  # 4 —Ä–∞–∑–∞ –≤ –¥–µ–Ω—å
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Setup debug environment
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Process blocklists
        run: |
          # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–µ–π
          process_list() {
            local url=$1
            local output=$2
            
            echo "üîÑ Processing $output from $url"
            
            # 1. –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
            echo "‚¨áÔ∏è Downloading source file..."
            if ! curl -sSf -o source.tmp "$url"; then
              echo "‚ùå Failed to download $url"
              return 1
            fi
            
            # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
            echo "üîç Content inspection:"
            echo "   File size: $(wc -l < source.tmp) lines"
            echo "   First 3 lines:"
            head -n 3 source.tmp || true
            echo "   Last 3 lines:"
            tail -n 3 source.tmp || true
            
            # 3. –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
            echo "üßπ Cleaning data..."
            grep -v '^#' source.tmp | \
              sed -E 's/^[[:space:]]*//; s/[[:space:]]*$//; /^$/d; s/^domain://i' > cleaned.tmp
            
            # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—á–∏—â–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            echo "‚úÖ Cleaned data:"
            echo "   Lines count: $(wc -l < cleaned.tmp)"
            echo "   Sample content:"
            head -n 5 cleaned.tmp || true
            
            # 5. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è YAML
            echo "üì¶ Generating YAML..."
            echo "payload:" > "$output"
            if [ -s cleaned.tmp ]; then
              while read -r line; do
                [[ -n "$line" ]] && echo "  - DOMAIN,$line" >> "$output"
              done < cleaned.tmp
            else
              echo "  # No valid domains found" >> "$output"
            fi
            
            # 6. –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            echo "üîé Final validation:"
            echo "   Output lines: $(wc -l < "$output")"
            echo "   Result preview:"
            head -n 5 "$output"
            
            # 7. –û—á–∏—Å—Ç–∫–∞
            rm -f source.tmp cleaned.tmp
            echo "‚úîÔ∏è Successfully processed $output"
            echo ""
          }

          # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Å–ø–∏—Å–∫–æ–≤
          process_list "https://raw.githubusercontent.com/runetfreedom/russia-blocked-geosite/release/antifilter-download-community.txt" "antifilter-community.yaml"
          process_list "https://raw.githubusercontent.com/runetfreedom/russia-blocked-geosite/release/antifilter-download.txt" "antifilter.yaml"
          process_list "https://raw.githubusercontent.com/runetfreedom/russia-blocked-geosite/release/refilter.txt" "refilter.yaml"
          process_list "https://raw.githubusercontent.com/runetfreedom/russia-blocked-geosite/release/ru-blocked-all.txt" "ru-blocked-all.yaml"
          process_list "https://raw.githubusercontent.com/runetfreedom/russia-blocked-geosite/release/ru-blocked-all.txt" "ru-blocked.yaml"
          process_list "https://raw.githubusercontent.com/runetfreedom/russia-blocked-geosite/release/win-spy.txt" "win-spy.yaml"

      - name: Verify results
        run: |
          echo "üìä Final results:"
          for file in *.yaml; do
            echo "=== $file ==="
            echo "Size: $(wc -l < "$file") lines"
            echo "First 5 lines:"
            head -n 5 "$file"
            echo ""
          done

      - name: Commit changes
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ -z "$(git status --porcelain)" ]; then
            echo "üîÑ No changes detected"
            exit 0
          fi
          
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add *.yaml
          git commit -m "Auto-update: $(date +'%Y-%m-%d %H:%M')"
          git pull --rebase
          git push
